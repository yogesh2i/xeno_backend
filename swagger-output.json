{
  "swagger": "2.0",
  "info": {
    "title": "CRM API",
    "description": "Api docs for xeno crm assignment",
    "version": "1.0.0"
  },
  "host": "localhost:5000",
  "basePath": "/",
  "schemes": [
    "http"
  ],
  "paths": {
    "/api/customers/filter": {
      "post": {
        "description": "Returns audience size based on the provided rules.",
        "parameters": [
            {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "description": "Bearer token for authorization",
            "required": true,
            "example": "Bearer your_token"
            },
          {
            "name": "body",
            "in": "body",
            "schema": {
                "type": "array",
                "items": {
                "type": "object",
                "properties": {
                  "field": {
                  "type": "string",
                  "example": "spentAmount"
                  },
                  "operator": {
                  "type": "string",
                  "example": ">"
                  },
                  "value": {
                  "type": "string",
                  "example": "1000"
                  },
                  "logic": {
                  "type": "string",
                  "example": "AND"
                  }
                }
                }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "audienceSize": {
                  "type": "integer",
                  "example": 100
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Invalid request"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Unauthorized"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Forbidden"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Internal Server Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/customers/": {
      "post": {
        "description": "Add new customer",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "description": "Bearer token for authorization",
            "required": true,
            "example": "Bearer your_token"
            },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "example": "any"
                },
                "location": {
                  "example": "any"
                },
                "spentAmount": {
                  "type": "integer",
                  "example": 100
                },
                "inactiveDays": {
                  "type": "integer",
                  "example": 30
                },
                "age": {
                  "type": "integer",
                  "example": 25
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "example": "any"
                },
                "location": {
                  "example": "any"
                },
                "spentAmount": {
                  "type": "integer",
                  "example": 100
                },
                "inactiveDays": {
                  "type": "integer",
                  "example": 30
                },
                "age": {
                  "type": "integer",
                  "example": 25
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Invalid request"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Unauthorized"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Forbidden"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Internal Server Error"
                }
              }
            }
          }
        }
      },
      "get": {
        "description": "Get all customers",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "description": "Bearer token for authorization",
            "required": true,
            "example": "Bearer your_token"
            }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "name": {
                    "example": "any"
                  },
                  "location": {
                    "example": "any"
                  },
                  "spentAmount": {
                    "type": "integer",
                    "example": 100
                  },
                  "inactiveDays": {
                    "type": "integer",
                    "example": 30
                  },
                  "age": {
                    "type": "integer",
                    "example": 25
                  }
                }
              }
            }

          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Unauthorized"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Forbidden"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Internal Server Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/orders/": {
      "post": {
        "description": "Add a new order",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "description": "Bearer token for authorization",
            "required": true,
            "example": "Bearer your_token"
            },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "customerId": {
                  "example": "any"
                },
                "orderAmount": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "type": "object",
              "properties": {
                "customerId": {
                  "example": "any"
                },
                "orderAmount": {
                  "example": "any"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Invalid request"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Unauthorized"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Forbidden"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Not Found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Internal Server Error"
                }
              }
            }
          }
        }
      },
      "get": {
        "description": "Get all orders",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "description": "Bearer token for authorization",
            "required": true,
            "example": "Bearer your_token"
            }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "customerId": {
                    "example": "any"
                  },
                  "orderAmount": {
                    "example": "any"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Unauthorized"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Forbidden"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Internal Server Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/delivery-receipt/": {
      "post": {
        "description": "Log delivery receipt to DB",
        "parameters": [

          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "campaignName": {
                  "example": "any"
                },
                "sent": {
                  "type": "array",
                  "items": {
                  "type": "object",
                  "properties": {
                    "customerId": {
                    "type": "string",
                    "example": "customer123"
                    },
                    "message": {
                    "type": "string",
                    "example": "Message content"
                    }
                  }
                  }
                },
                "failed": {
                  "type": "array",
                  "items": {
                  "type": "string",
                  "example": "customer123"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "example": "Delivery receipt logged successfully"
                }
                
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Invalid request"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Unauthorized"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Forbidden"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Internal Server Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/campaign/": {
      "get": {
        "description": "Get all campaigns history",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "description": "Bearer token for authorization",
            "required": true,
            "example": "Bearer your_token"
            }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "name": {
                    "example": "any"
                  },
                  "segmentName": {
                    "example": "any"
                  },
                  "audienceSize": {
                    "type": "integer",
                    "example": 100
                  },
                  "sent": {
                    "type": "integer",
                    "example": 100
                  },
                  "failed": {
                    "type": "integer",
                    "example": 10
                  },
                  "rules": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "field": { "type": "string" },
                          "operator": { "type": "string" },
                          "value": { "type": "string" },
                          "logic": { "type": "string" }
                        }
                      }
                    },
                    "tag": {
                      "example": "any"
                    }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Unauthorized"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Forbidden"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Internal Server Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "description": "Add a new campaign",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "description": "Bearer token for authorization",
            "required": true,
            "example": "Bearer your_token"
            },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "example": "any"
                },
                "segmentName": {
                  "example": "any"
                },
                "audienceSize": {
                  "type": "integer",
                  "example": 100
                },
                "sent": {
                  "type": "integer",
                  "example": 100
                },
                "failed": {
                  "type": "integer",
                  "example": 10
                },
                "rules": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "field": {
                        "example": "spentAmount"
                      },
                      "operator": {
                        "example": ">"
                      },
                      "value": {
                        "example": "200"
                      },
                      "logic": {
                        "example": "AND"
                      }
                    }
                  }
                },
                "tag": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "type": "object",
              "properties": {
              "message": {
                "example": "Campaign created successfully"
              },
              "campaign": {
                "type": "object",
                "properties": {
                "name": {
                  "example": "any"
                },
                "segmentName": {
                  "example": "any"
                },
                "audienceSize": {
                  "type": "integer",
                  "example": 100
                },
                "sent": {
                  "type": "integer",
                  "example": 100
                },
                "failed": {
                  "type": "integer",
                  "example": 10
                },
                "rules": {
                  "type": "array",
                  "items": {
                  "type": "object",
                  "properties": {
                    "field": {
                    "example": "spentAmount"
                    },
                    "operator": {
                    "example": ">"
                    },
                    "value": {
                    "example": 200
                    },
                    "logic": {
                    "example": 1
                    }
                  }
                  }
                },
                "tag": {
                  "example": 1
                }
                }
              }
              }
            }

          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Invalid request"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Unauthorized"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Forbidden"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Internal Server Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/register": {
      "post": {
        "description": "Register a new user using username, password",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "username": {
                  "example": "any"
                },
                "password": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "example": "User registered successfully"
                }
              }
            }
            
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Invalid request"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Unauthorized"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Forbidden"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Internal Server Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/login": {
      "post": {
        "description": "Login using uaername, password",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "username": {
                  "example": "any"
                },
                "password": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "token": {
                  "example": "any"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Invalid request"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Unauthorized"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Forbidden"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Internal Server Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/google": {
      "post": {
        "description": "Register using GAuth",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "token": {
                  "example": "any"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Invalid request"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Unauthorized"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Forbidden"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Internal Server Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/verify-token": {
      "get": {
        "description": "Verify user token if expired or not",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "valid": {
                  "type": "boolean",
                  "example": true
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/ai/generate-insight": {
      "post": {
        "description": "Generate ai based tag",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "example": "any"
                },
                "audienceSize": {
                  "example": "any"
                },
                "sent": {
                  "example": "any"
                },
                "failed": {
                  "example": "any"
                },
                "audienceSegment": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "tag": {
                  "example": "any"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Unauthorized"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Forbidden"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Internal Server Error"
                }
              }
            }
          }
        }
      }
    }
  }
}